// inbound OpenID authentication with hello.coop for social logins
Flow agama.inbound.hello
     Basepath ""
     Configs conf
When conf.hello.redirectUri is null
     // Obtain hostname from HTTP url
     issuer = Call io.jans.util.NetworkUtils#urlBeforeContextPath  
     // assign redirect url
     list = [issuer, "/jans-auth/fl/callback"]
     // Build Redirect Uri
     conf.hello.redirectUri = Call java.lang.String#join "" list
// instantiate code grant utility
codeGrantUtil = Call io.jans.inbound.oauth2.CodeGrantUtil#new conf.hello
// authorization request
Log "@info Creating an authorization request"
// generate authorization request
url = Call codeGrantUtil makeAuthzRequest  
// extract url and generated state
state = url.second
url = url.first
// redirect log
Log "@info Redirecting to hello.coop for social login..."
// redirection to external op for social login
responseParamas = RFAC url
// received response from hello.coop
Log "@info Browser taken back to redirect uri"
// Parse code presented at callback uri
code = Call codeGrantUtil parseCode responseParams state
// Grab token response variable looks like sector 4.1.4 of RFC 6749
response = Call codeGrantUtil getTokenResponse code
// log
Log "@info Access token has been obtained"
// assigned response data
obj = { success: true, data: response }
// assigned access_token
token = response.access_token
// calls the userinfo endpoint and parse the request as a map
p | E = Call io.jans.util.NetworkUtils#mapFromGetRequestWithToken conf.hello.userInfoEndpoint token
// check if exception was thrown previously
When E is not null
     // error log
     Log "@error " E
     // list of error message
     msg = ["Unable to retrieve user profile.", E.message]
     // generated error message
     msg = Call java.lang.String#join " " msg
     // return error with exception
     it_viebp = { success: false, error: msg }
     Finish it_viebp
// dump profile data
Log "@debug Profile data:\n" p
// assign user profile and response data
obj = { success: true, data: { profile: p, tokenResponse: obj.data } }